[{"/Users/nimrodti/Documents/projects/category-tree-task/src/index.js":"1","/Users/nimrodti/Documents/projects/category-tree-task/src/App.js":"2","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CategoriesTree.js":"3","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CategoryItem/CategoryItem.js":"4","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/Card.js":"5","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/Button.js":"6","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CollapsibleButton.js":"7","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/ActionsMenu.js":"8","/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/ToggleButton.js":"9"},{"size":220,"mtime":1636902279438,"results":"10","hashOfConfig":"11"},{"size":3944,"mtime":1636900722080,"results":"12","hashOfConfig":"11"},{"size":5182,"mtime":1636902107991,"results":"13","hashOfConfig":"11"},{"size":3042,"mtime":1636897744219,"results":"14","hashOfConfig":"11"},{"size":152,"mtime":1636715551581,"results":"15","hashOfConfig":"11"},{"size":384,"mtime":1636871583970,"results":"16","hashOfConfig":"11"},{"size":487,"mtime":1636811624781,"results":"17","hashOfConfig":"11"},{"size":1141,"mtime":1636873332599,"results":"18","hashOfConfig":"11"},{"size":410,"mtime":1636871819743,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16lk7jj",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/nimrodti/Documents/projects/category-tree-task/src/index.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/App.js",["40"],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CategoriesTree.js",["41","42","43","44","45","46","47","48"],"import { useEffect, useState } from \"react\";\nimport { List, AutoSizer } from \"react-virtualized\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CategoryItem from \"./CategoryItem/CategoryItem\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport classes from \"./Categories.module.css\";\n\nconst findCategoryById = (id, list) => {\n  const queue = [];\n  list.forEach((element) => {\n    queue.push(element);\n  });\n  while (queue.length) {\n    const curr = queue.pop();\n    if (curr.id === id) {\n      // element found\n      return curr;\n    } else {\n      curr.subCategories &&\n        curr.subCategories.forEach((element) => {\n          queue.push(element);\n        });\n    }\n  }\n};\n\nconst setNodeName = (id, name, list) => {\n  const node = list.find((c) => c.id === id);\n  node.name = name;\n};\n\n/**\n * Constants\n */\nconst listHeight = 600;\nconst rowHeight = 50;\nconst rowWidth = 800;\n\n/**\n *      Component representing a tree of categories\n * */\nconst CategoriesTree = ({ categories, setCategories, onSaveAll }) => {\n  useEffect(() => {\n    // console.log(\"tree\",tree);\n    setCategories(categories);\n  }, []);\n\n  const deleteHandler = (id, parentId) => {\n    // in case category in root\n    if (parentId === null) {\n      setCategories((prevCategories) =>\n        prevCategories.filter((c) => c.id !== id)\n      );\n    } else {\n      const categoryItems = [...categories];\n      const parent = findCategoryById(parentId, categoryItems);\n      const newChildren = parent.subCategories.filter((c) => c.id !== id);\n      parent.subCategories = [...newChildren];\n      setCategories(categoryItems);\n    }\n  };\n\n  const addRootCatgoryHandler = () => {\n    const newCategory = {\n      id: uuidv4(),\n      parentId: null,\n      name: \"\",\n      level: 1,\n      subCategories: [],\n    };\n    setCategories((prevCategories) => [...prevCategories, newCategory]);\n  };\n\n  const addCategoryHandler = (parentId, parentLevel) => {\n    const newCategory = {\n      id: uuidv4(),\n      parentId: parentId,\n      name: \"\",\n      level: parentLevel + 1,\n      subCategories: [],\n    };\n    const categoryItems = [...categories];\n    const parent = findCategoryById(parentId, categoryItems);\n    parent.subCategories.push(newCategory);\n    setCategories(categoryItems);\n  };\n  // console.log(\"after render\", categories);\n\n  const saveCategory = (name, id, parentId) => {\n    const categoryItems = [...categories];\n    // in case category in root\n    if (parentId === null) {\n      setNodeName(id, name, categoryItems);\n    } else {\n      const parent = findCategoryById(parentId, categoryItems);\n      setNodeName(id, name, parent.subCategories);\n    }\n    setCategories(categoryItems);\n  };\n\n  const rowRenderer = ({\n    index, // Index of row\n    key, // Unique key within array of rendered rows\n    style, // Style object to be applied to row (to position it);\n    // This must be passed through to the rendered row element.\n  }) => {\n    const item = categories[index];\n    return (\n      <div key={key} style={style} className=\"row\">\n        <CategoryItem\n          key={item.id}\n          id={item.id}\n          parentId={!item.parentId ? null : item.parentId}\n          name={item.name}\n          level={item.level}\n          rootIndex={item.rootIndex}\n          subCategories={!item.subCategories ? [] : item.subCategories}\n          createTreeNodes={generateCategoryTree}\n          addCategoryHandler={addCategoryHandler}\n          deleteHandler={deleteHandler}\n          saveCategory={saveCategory}\n        ></CategoryItem>\n      </div>\n    );\n  };\n\n  const generateCategoryTree = (items) => {\n    // return (\n    //   <List\n    //     width={rowWidth}\n    //     height={listHeight}\n    //     rowHeight={rowHeight}\n    //     rowRenderer={rowRenderer}\n    //     rowCount={categories.length}\n    //   />\n    // );\n    console.log(items);\n    return items.map((item) => (\n      <CategoryItem\n        key={item.id}\n        id={item.id}\n        parentId={!item.parentId ? null : item.parentId}\n        name={item.name}\n        level={item.level}\n        rootIndex={item.rootIndex}\n        subCategories={!item.subCategories ? [] : item.subCategories}\n        createTreeNodes={generateCategoryTree}\n        addCategoryHandler={addCategoryHandler}\n        deleteHandler={deleteHandler}\n        saveCategory={saveCategory}\n      ></CategoryItem>\n    ));\n  };\n\n  return (\n    <section className={classes.categoris}>\n      <Card>\n        <h3 className={classes.title}>Animals</h3>\n        <div className={classes.saveContainer}>\n          <Button\n            className={classes.save}\n            onClick={() => onSaveAll(categories)}\n          >\n            Save\n          </Button>\n        </div>\n        <ul>\n          {categories &&\n            categories.length > 0 &&\n            generateCategoryTree(categories)}\n        </ul>\n        <button\n          className={classes.newItemButton}\n          onClick={() => addRootCatgoryHandler()}\n        >\n          <AiOutlinePlus />\n          <span className={classes.newLabel}>Category item</span>\n        </button>\n      </Card>\n    </section>\n  );\n};\n\nexport default CategoriesTree;\n",["49","50"],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CategoryItem/CategoryItem.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/Card.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/Button.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/CollapsibleButton.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/Categories/ActionsMenu.js",[],"/Users/nimrodti/Documents/projects/category-tree-task/src/Components/UI/ToggleButton.js",[],{"ruleId":"51","severity":1,"message":"52","line":17,"column":7,"nodeType":"53","messageId":"54","endLine":17,"endColumn":21},{"ruleId":"51","severity":1,"message":"55","line":1,"column":21,"nodeType":"53","messageId":"54","endLine":1,"endColumn":29},{"ruleId":"51","severity":1,"message":"56","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"51","severity":1,"message":"57","line":2,"column":16,"nodeType":"53","messageId":"54","endLine":2,"endColumn":25},{"ruleId":"51","severity":1,"message":"58","line":37,"column":7,"nodeType":"53","messageId":"54","endLine":37,"endColumn":17},{"ruleId":"51","severity":1,"message":"59","line":38,"column":7,"nodeType":"53","messageId":"54","endLine":38,"endColumn":16},{"ruleId":"51","severity":1,"message":"60","line":39,"column":7,"nodeType":"53","messageId":"54","endLine":39,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":48,"column":6,"nodeType":"63","endLine":48,"endColumn":8,"suggestions":"64"},{"ruleId":"51","severity":1,"message":"65","line":103,"column":9,"nodeType":"53","messageId":"54","endLine":103,"endColumn":20},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},"no-unused-vars","'demoCategories' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'List' is defined but never used.","'AutoSizer' is defined but never used.","'listHeight' is assigned a value but never used.","'rowHeight' is assigned a value but never used.","'rowWidth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'categories' and 'setCategories'. Either include them or remove the dependency array. If 'setCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["70"],"'rowRenderer' is assigned a value but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],{"desc":"73","fix":"74"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [categories, setCategories]",{"range":"75","text":"76"},[1170,1172],"[categories, setCategories]"]